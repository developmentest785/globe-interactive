@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@font-face {
  font-family: "United Sans";
  src: local("United Sans Reg Medium"), local("UnitedSansReg-Medium"),
    url("../public/font/UnitedSansReg-Medium.woff2") format("woff2"),
    url("../public/font/UnitedSansReg-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "United Sans";
  src: local("United Sans Reg Heavy"), local("UnitedSansReg-Heavy"),
    url("../public/font/UnitedSansReg-Heavy.woff2") format("woff2"),
    url("../public/font/UnitedSansReg-Heavy.woff") format("woff");
  font-weight: 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "United Sans";
  src: local("United Sans Reg Light"), local("UnitedSansReg-Light"),
    url("../public/font/UnitedSansReg-Light.woff2") format("woff2"),
    url("../public/font/UnitedSansReg-Light.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "United Sans";
  src: local("United Sans Reg Bold"), local("UnitedSansReg-Bold"),
    url("../public/font/UnitedSansReg-Bold.woff2") format("woff2"),
    url("../public/font/UnitedSansReg-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "United Sans";
  src: local("United Sans Reg Black"), local("UnitedSansReg-Black"),
    url("../public/font/UnitedSansReg-Black.woff2") format("woff2"),
    url("../public/font/UnitedSansReg-Black.woff") format("woff");
  font-weight: 900;
  font-style: normal;
  font-display: swap;
}

@theme {
  --radius-lg: calc(var(--radius));
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
    @apply border-border;
  }
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 39, 39%, 69%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 39, 39%, 69%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }

  body {
    @apply bg-background text-foreground;
    font-family: "United Sans", system-ui, -apple-system, BlinkMacSystemFont,
      "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
      "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
      "Noto Color Emoji";
  }
}

@theme inline {
  --animation-delay-0: 0s;
  --animation-delay-75: 75ms;
  --animation-delay-100: 0.1s;
  --animation-delay-150: 0.15s;
  --animation-delay-200: 0.2s;
  --animation-delay-300: 0.3s;
  --animation-delay-500: 0.5s;
  --animation-delay-700: 0.7s;
  --animation-delay-1000: 1s;

  --animation-repeat-0: 0;
  --animation-repeat-1: 1;
  --animation-repeat-infinite: infinite;

  --animation-direction-normal: normal;
  --animation-direction-reverse: reverse;
  --animation-direction-alternate: alternate;
  --animation-direction-alternate-reverse: alternate-reverse;

  --animation-fill-mode-none: none;
  --animation-fill-mode-forwards: forwards;
  --animation-fill-mode-backwards: backwards;
  --animation-fill-mode-both: both;

  --animate-in: var(--tw-duration, 150ms) var(--tw-ease, ease) enter;
  --animate-out: var(--tw-duration, 150ms) var(--tw-ease, ease) exit;

  --percentage-0: 0;
  --percentage-5: 0.05;
  --percentage-10: 0.1;
  --percentage-15: 0.15;
  --percentage-20: 0.2;
  --percentage-25: 0.25;
  --percentage-30: 0.3;
  --percentage-35: 0.35;
  --percentage-40: 0.4;
  --percentage-45: 0.45;
  --percentage-50: 0.5;
  --percentage-55: 0.55;
  --percentage-60: 0.6;
  --percentage-65: 0.65;
  --percentage-70: 0.7;
  --percentage-75: 0.75;
  --percentage-80: 0.8;
  --percentage-85: 0.85;
  --percentage-90: 0.9;
  --percentage-95: 0.95;
  --percentage-100: 1;

  @keyframes enter {
    from {
      opacity: var(--tw-enter-opacity, 1);
      transform: translate3d(
          var(--tw-enter-translate-x, 0),
          var(--tw-enter-translate-y, 0),
          0
        )
        scale3d(
          var(--tw-enter-scale, 1),
          var(--tw-enter-scale, 1),
          var(--tw-enter-scale, 1)
        )
        rotate(var(--tw-enter-rotate, 0));
    }
  }

  @keyframes exit {
    to {
      opacity: var(--tw-exit-opacity, 1);
      transform: translate3d(
          var(--tw-exit-translate-x, 0),
          var(--tw-exit-translate-y, 0),
          0
        )
        scale3d(
          var(--tw-exit-scale, 1),
          var(--tw-exit-scale, 1),
          var(--tw-exit-scale, 1)
        )
        rotate(var(--tw-exit-rotate, 0));
    }
  }
}

/*
 * Tailwind's default `duration` utility sets the `--tw-duration` variable, so
 * can set `animation-duration` directly in the animation definition in the
 * `@theme` section above. Same goes for the `animation-timing-function`, set
 * with `--tw-ease`.
 */

@utility delay-* {
  animation-delay: --value([duration]);
  animation-delay: calc(--value(integer) * 1ms);
  animation-delay: --value(--animation-delay- *);
}

@utility repeat-* {
  animation-iteration-count: --value(--animation-repeat- *, integer);
}

@utility direction-* {
  animation-direction: --value(--animation-direction- *);
}

@utility fill-mode-* {
  animation-fill-mode: --value(--animation-fill-mode- *);
}

@utility running {
  animation-play-state: running;
}
@utility paused {
  animation-play-state: paused;
}

@utility fade-in-* {
  --tw-enter-opacity: --value(--percentage- *);
}
@utility fade-out-* {
  --tw-exit-opacity: --value(--percentage- *);
}

@utility zoom-in-* {
  --tw-enter-scale: --value(--percentage- *);
}
@utility zoom-out-* {
  --tw-exit-scale: --value(--percentage- *);
}

@utility spin-in-* {
  --tw-enter-rotate: calc(--value(integer) * 1deg);
  --tw-enter-rotate: --value(--rotate- *, [angle]);
}
@utility spin-out-* {
  --tw-exit-rotate: calc(--value(integer) * 1deg);
  --tw-exit-rotate: --value(--rotate- *, [angle]);
}

@utility slide-in-from-top-* {
  --tw-enter-translate-y: calc(--value([percentage], [length]) * -1);
}
@utility slide-in-from-bottom-* {
  --tw-enter-translate-y: --value([percentage], [length]);
}
@utility slide-in-from-left-* {
  --tw-enter-translate-x: calc(--value([percentage], [length]) * -1);
}
@utility slide-in-from-right-* {
  --tw-enter-translate-x: --value([percentage], [length]);
}

@utility slide-out-to-top-* {
  --tw-exit-translate-y: calc(--value([percentage], [length]) * -1);
}
@utility slide-out-to-bottom-* {
  --tw-exit-translate-y: --value([percentage], [length]);
}
@utility slide-out-to-left-* {
  --tw-exit-translate-x: calc(--value([percentage], [length]) * -1);
}
@utility slide-out-to-right-* {
  --tw-exit-translate-x: --value([percentage], [length]);
}
